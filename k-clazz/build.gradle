dependencies {
    api(project(":k-utils"))
}


jar {
    exclude("logback.xml")
    exclude("k-jul-logging.properties")

}

test {
    jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
    jvmArgs('--add-opens', 'java.base/java.net=ALL-UNNAMED')
    println jvmArgs
    jacoco {
        includes = []
        excludes = []
    }
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "io/github/kylinhunter/commons/**/exception/**",
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['io.github.kylinhunter.*']
            excludes = ['io.github.kylinhunter.commons.clazz.exception.*']
            limit {
                counter = 'INSTRUCTION'
                minimum = 0.5
            }
            limit {
                counter = 'BRANCH'
                minimum = 0.3
            }
        }
    }
}


